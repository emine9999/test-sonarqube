pipeline {
    agent any
    
    environment {
        SONARQUBE_URL = "http://128.110.217.203:9000"
        SONARQUBE_TOKEN = credentials('sonarqube-token') // Use a credentials ID instead of hardcoding the token
    }
    
    tools {
        jdk 'JDK17' // Specify the JDK to use, make sure this matches a JDK installation name in Jenkins
    }
    
    stages {
        stage('Debug') {
            steps {
                script {
                    echo "SONARQUBE_URL: ${SONARQUBE_URL}"
                    echo "Java version:"
                    sh 'java -version'
                    sh "curl -X GET ${SONARQUBE_URL}/api/system/status"
                }
            }
        }
        
        stage('SonarQube Analysis') {
            steps {
                script {
                    def scannerHome = tool 'sonarqube-scanner'
                    withSonarQubeEnv('SonarQube') { // Make sure this matches your SonarQube server name in Jenkins configuration
                        sh """
                            ${scannerHome}/bin/sonar-scanner \
                                -Dsonar.projectKey=my-js-sample-project \
                                -Dsonar.sources=. \
                                -Dsonar.host.url=${SONARQUBE_URL} \
                                -Dsonar.token=${SONARQUBE_TOKEN}
                        """
                    }
                }
            }
        }
        
        stage('Build') {
            steps {
                echo 'Building the project...'
            }
        }
    }
    
    post {
        always {
            echo 'Cleaning up...'
        }
    }
}
